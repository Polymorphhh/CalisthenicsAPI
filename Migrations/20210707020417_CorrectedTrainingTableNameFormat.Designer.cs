// <auto-generated />
using System;
using CalisthenicsAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CalisthenicsAPI.Migrations
{
    [DbContext(typeof(CalisthenicsContext))]
    [Migration("20210707020417_CorrectedTrainingTableNameFormat")]
    partial class CorrectedTrainingTableNameFormat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CalisthenicsAPI.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Hold")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("CalisthenicsAPI.Models.Set", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Repetition")
                        .HasColumnType("int");

                    b.Property<int>("RestTime")
                        .HasColumnType("int");

                    b.Property<int?>("TrainingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.ToTable("Sets");
                });

            modelBuilder.Entity("CalisthenicsAPI.Models.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("CalisthenicsAPI.Models.TrainingExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("RefExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("Repetition")
                        .HasColumnType("int");

                    b.Property<int?>("SetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RefExerciseId");

                    b.HasIndex("SetId");

                    b.ToTable("TrainingExercises");
                });

            modelBuilder.Entity("CalisthenicsAPI.Models.Set", b =>
                {
                    b.HasOne("CalisthenicsAPI.Models.Training", null)
                        .WithMany("Sets")
                        .HasForeignKey("TrainingId");
                });

            modelBuilder.Entity("CalisthenicsAPI.Models.TrainingExercise", b =>
                {
                    b.HasOne("CalisthenicsAPI.Models.Exercise", "RefExercise")
                        .WithMany()
                        .HasForeignKey("RefExerciseId");

                    b.HasOne("CalisthenicsAPI.Models.Set", null)
                        .WithMany("TrainingExercises")
                        .HasForeignKey("SetId");

                    b.Navigation("RefExercise");
                });

            modelBuilder.Entity("CalisthenicsAPI.Models.Set", b =>
                {
                    b.Navigation("TrainingExercises");
                });

            modelBuilder.Entity("CalisthenicsAPI.Models.Training", b =>
                {
                    b.Navigation("Sets");
                });
#pragma warning restore 612, 618
        }
    }
}
